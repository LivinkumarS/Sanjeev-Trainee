React:
------
What is it?

*) it is a JS library for building UI.
*) Developed by meta.
*) component based, SPA(Single Page Application)(index.html).(MPA)(ex: index.html, signin.html...)

Why use React?

*) Reusable components.
*) Virtual DOM.(virtual DOM for all the components in react).
*) Flexibility. (we can integrate with other libraries easyly).

Node---> JS Runtime.
NPM---> Node Package Manager.
ex: npm install packname

Initiating Vite React App
--------------------------

step 1: npm create vite@latest
step 2:cd "directory name"
step 3: npm install
step 4: npm run dev.


JSX--->JS+XML
---------------
It lets you write HTML code inside JS.
JSX makes it easy to describe the UI Structure.

Rules:
------
attributes must be in camelCase.
ex: className="".....

JS>HTML--->()
HTML>JS--->{}



components and props
---------------------

Componets---> A JS function that returns JSX(Single parent HTML element).
Props and PPassing Data through Props

State and Hooks
-----------
state is an object (or value) that stores information about the component's current stage.

state change--->component rerender

state life cycle---> to maintain state life cycle we need hooks in functional componants.

Hooks:
---------

1)useState--> create and update states
create--> const [state,updateFunc]=useState(initialVal)



Event Handling In React.
--------------------------
camelCase for event names
you should only mention the function name(do not invoke it)

if you want to give parameters, then use arrow 
ex: onClick={() => {
          changeNum(100);
        }}


Conditional Rendering
-----------------------
Rendering components according to the condition.

way1--> AND operator---> condition && (component)
way2--> Ternary---> condition ? (comp1) : (comp2)


List Rendering 
---------------
it refers to how lists are rendered in react.


Contrlled inputs
----------------

normal HTML inputs---> to change---> (to type into in). to access--->(e.tartget.value)
(uncontrolled inputs)(should not use it).

controlled inputs---> the value of that input will be stored in a state. 
